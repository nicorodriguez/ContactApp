// <auto-generated />
using System;
using ContactApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200708050746_second-migration")]
    partial class secondmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactApp.Model.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContactId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnName("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnName("Company")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnName("PersonalNumber")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("ProfileId")
                        .HasColumnName("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("WorkNumber")
                        .IsRequired()
                        .HasColumnName("WorkNumber")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("ContactId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Address = "Calle 1 123",
                            Birthdate = new DateTime(2020, 7, 8, 2, 7, 45, 978, DateTimeKind.Local).AddTicks(3743),
                            City = "Mar del Plata",
                            Company = "Santander Rio",
                            Email = "juan.gonzales@gmail.com",
                            Image = "image1",
                            Name = "Juan Gonzales",
                            PersonalNumber = "5411527714",
                            ProfileId = 1,
                            State = "Buenos Aires",
                            WorkNumber = "5411527754"
                        },
                        new
                        {
                            ContactId = 2,
                            Address = "Belgrano 550",
                            Birthdate = new DateTime(2020, 7, 6, 2, 7, 45, 979, DateTimeKind.Local).AddTicks(4621),
                            City = "Mendoza",
                            Company = "Galeno",
                            Email = "guillermo.garcia@gmail.com",
                            Image = "image2",
                            Name = "Guillermo Garcia",
                            PersonalNumber = "5411635449",
                            ProfileId = 2,
                            State = "Mendoza",
                            WorkNumber = "5411635489"
                        },
                        new
                        {
                            ContactId = 3,
                            Address = "Av Libertador 1700",
                            Birthdate = new DateTime(2020, 7, 3, 2, 7, 45, 979, DateTimeKind.Local).AddTicks(4799),
                            City = "Capital Federal",
                            Company = "Arcor",
                            Email = "martin.mendoza@gmail.com",
                            Image = "image3",
                            Name = "Martin Mendoza",
                            PersonalNumber = "5411526328",
                            ProfileId = 3,
                            State = "Buenos Aires",
                            WorkNumber = "5411526358"
                        },
                        new
                        {
                            ContactId = 4,
                            Address = "Avenida Siempre Viva 1234",
                            Birthdate = new DateTime(1965, 7, 8, 2, 7, 45, 979, DateTimeKind.Local).AddTicks(4804),
                            City = "Ciudad Grito",
                            Company = "Planta Nuclear",
                            Email = "homero.simpson@lossimpsons.com",
                            Image = "image4",
                            Name = "Homero Simpson",
                            PersonalNumber = "344456984",
                            ProfileId = 1,
                            State = "springfield",
                            WorkNumber = "344456987"
                        },
                        new
                        {
                            ContactId = 5,
                            Address = "9th Street",
                            Birthdate = new DateTime(1970, 7, 8, 2, 7, 45, 979, DateTimeKind.Local).AddTicks(4876),
                            City = "NY",
                            Company = "Stark Industries",
                            Email = "tony.stark@starkindustries.com",
                            Image = "image5",
                            Name = "Tony Stark",
                            PersonalNumber = "5411526328",
                            ProfileId = 3,
                            State = "NY",
                            WorkNumber = "5411526358"
                        });
                });

            modelBuilder.Entity("ContactApp.Model.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProfileId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            Name = "User"
                        },
                        new
                        {
                            ProfileId = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            ProfileId = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ContactApp.Model.Contact", b =>
                {
                    b.HasOne("ContactApp.Model.Profile", "Profile")
                        .WithMany("Contacts")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK_contact_profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
